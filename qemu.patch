diff --git a/hw/arm/virt.c b/hw/arm/virt.c
index 30da05dfe0..d4c72455db 100644
--- a/hw/arm/virt.c
+++ b/hw/arm/virt.c
@@ -161,7 +161,8 @@ static const MemMapEntry base_memmap[] = {
     [VIRT_PCIE_PIO] =           { 0x3eff0000, 0x00010000 },
     [VIRT_PCIE_ECAM] =          { 0x3f000000, 0x01000000 },
     /* Actual RAM size depends on initial RAM and device memory settings */
-    [VIRT_MEM] =                { GiB, LEGACY_RAMLIMIT_BYTES },
+    // [VIRT_MEM] =                { GiB, LEGACY_RAMLIMIT_BYTES },
+    [VIRT_MEM] =                { 0x80000000, LEGACY_RAMLIMIT_BYTES },
 };
 
 /*
diff --git a/hw/display/ramfb.c b/hw/display/ramfb.c
index 79b9754a58..73cd39857a 100644
--- a/hw/display/ramfb.c
+++ b/hw/display/ramfb.c
@@ -131,5 +131,28 @@ RAMFBState *ramfb_setup(Error **errp)
     fw_cfg_add_file_callback(fw_cfg, "etc/ramfb",
                              NULL, ramfb_fw_cfg_write, s,
                              &s->cfg, sizeof(s->cfg), false);
+
+    // Initialize now, ask questions later
+    // Instead of making the VM do it via fw_cfg, just let Qemu handle it :)
+    // See roms/seabios/vgasrc/ramfb.c
+#define fourcc_code(a, b, c, d) ((uint32_t)(a) | ((uint32_t)(b) << 8) | \
+                                 ((uint32_t)(c) << 16) | ((uint32_t)(d) << 24))
+#define DRM_FORMAT_RGBA1010102  fourcc_code('R', 'A', '3', '0') /* [31:0] R:G:B:A 10:10:10:2 little endian */
+#define DRM_FORMAT_ARGB8888 fourcc_code('A', 'R', '2', '4') /* [31:0] A:R:G:B 8:8:8:8 little endian */
+#define FRAMEBUFFER_WIDTH      1920
+#define FRAMEBUFFER_HEIGHT     1080
+#define FRAMEBUFFER_BPP        4
+#define FRAMEBUFFER_STRIDE     (FRAMEBUFFER_BPP * FRAMEBUFFER_WIDTH)
+#define PACMAN_VIRT_FRAMEBUFFER_ADDR 0x00000000C0000000
+
+    s->cfg.width        =     cpu_to_be32(FRAMEBUFFER_WIDTH);
+    s->cfg.height       =     cpu_to_be32(FRAMEBUFFER_HEIGHT);
+    s->cfg.stride       =     cpu_to_be32(FRAMEBUFFER_STRIDE);
+    s->cfg.flags        =     cpu_to_be32(0);
+    s->cfg.fourcc       =     cpu_to_be32(DRM_FORMAT_ARGB8888);
+    s->cfg.addr         =     cpu_to_be64(PACMAN_VIRT_FRAMEBUFFER_ADDR);
+
+    ramfb_fw_cfg_write(s, 0, 0);
+
     return s;
 }
